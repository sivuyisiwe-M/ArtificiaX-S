dashbord 


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Mentorship Admin - Application Review</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #ff8c42 0%, #ff6b35 100%);
            min-height: 100vh;
            padding: 20px;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            background: white;
            border-radius: 15px;
            box-shadow: 0 20px 40px rgba(0,0,0,0.1);
            overflow: hidden;
        }

        .header {
            background: linear-gradient(135deg, #ff8c42 0%, #ff6b35 100%);
            color: white;
            padding: 30px;
            text-align: center;
        }

        .header h1 {
            font-size: 2.5em;
            margin-bottom: 10px;
        }

        .header p {
            font-size: 1.1em;
            opacity: 0.9;
        }

        .tabs {
            display: flex;
            background: #f8f9fa;
            border-bottom: 1px solid #dee2e6;
        }

        .tab {
            flex: 1;
            padding: 15px 20px;
            background: none;
            border: none;
            cursor: pointer;
            font-size: 16px;
            font-weight: 500;
            transition: all 0.3s ease;
            position: relative;
        }

        .tab.active {
            background: white;
            color: #ff6b35;
        }

        .tab.active::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0;
            height: 3px;
            background: #ff6b35;
        }

        .tab:hover:not(.active) {
            background: #e9ecef;
        }

        .content {
            padding: 30px;
            min-height: 600px;
        }

        .tab-content {
            display: none;
        }

        .tab-content.active {
            display: block;
        }

        .application-card {
            background: white;
            border-radius: 10px;
            padding: 25px;
            margin-bottom: 20px;
            border-left: 5px solid #ff6b35;
            transition: transform 0.2s ease, box-shadow 0.2s ease;
        }

        .application-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 25px rgba(0,0,0,0.1);
        }

        .card-header {
            display: flex;
            justify-content: between;
            align-items: center;
            margin-bottom: 15px;
        }

        .applicant-name {
            font-size: 1.4em;
            font-weight: 600;
            color: #2c3e50;
        }

        .status-badge {
            padding: 5px 15px;
            border-radius: 20px;
            font-size: 0.9em;
            font-weight: 500;
            text-transform: uppercase;
        }

        .status-pending {
            background: #fff3cd;
            color: #856404;
        }

        .status-approved {
            background: #d1ecf1;
            color: #0c5460;
        }

        .status-rejected {
            background: #f8d7da;
            color: #721c24;
        }

        .application-details {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
            margin-bottom: 20px;
        }

        .detail-group {
            background: #fff8f3;
            padding: 15px;
            border-radius: 8px;
            border: 1px solid #ffe4d1;
        }

        .detail-label {
            font-weight: 600;
            color: #495057;
            margin-bottom: 5px;
        }

        .detail-value {
            color: #6c757d;
            line-height: 1.5;
        }

        .action-buttons {
            display: flex;
            gap: 10px;
            margin-top: 20px;
        }

        .btn {
            padding: 10px 20px;
            border: none;
            border-radius: 25px;
            cursor: pointer;
            font-weight: 500;
            transition: all 0.3s ease;
            text-decoration: none;
            display: inline-block;
            text-align: center;
        }

        .btn-primary {
            background: linear-gradient(135deg, #ff8c42 0%, #ff6b35 100%);
            color: white;
        }

        .btn-success {
            background: linear-gradient(135deg, #ff8c42 0%, #ffa500 100%);
            color: white;
        }

        .btn-danger {
            background: linear-gradient(135deg, #ff6b6b 0%, #ffa8a8 100%);
            color: white;
        }

        .btn-secondary {
            background: #ff8c42;
            color: white;
        }

        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.2);
        }

        .search-bar {
            width: 100%;
            padding: 15px;
            border: 2px solid #e9ecef;
            border-radius: 25px;
            font-size: 16px;
            margin-bottom: 20px;
            transition: border-color 0.3s ease;
        }

        .search-bar:focus {
            outline: none;
            border-color: #ff6b35;
        }

        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .stat-card {
            background: linear-gradient(135deg, #ff8c42 0%, #ff6b35 100%);
            color: white;
            padding: 25px;
            border-radius: 15px;
            text-align: center;
        }

        .stat-number {
            font-size: 2.5em;
            font-weight: bold;
            margin-bottom: 10px;
        }

        .stat-label {
            font-size: 1.1em;
            opacity: 0.9;
        }

        .review-form {
            background: #fff8f3;
            padding: 25px;
            border-radius: 10px;
            margin-top: 20px;
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-label {
            display: block;
            font-weight: 600;
            margin-bottom: 8px;
            color: #495057;
        }

        .form-control {
            width: 100%;
            padding: 12px;
            border: 2px solid #e9ecef;
            border-radius: 8px;
            font-size: 16px;
            transition: border-color 0.3s ease;
        }

        .form-control:focus {
            outline: none;
            border-color: #ff6b35;
        }

        textarea.form-control {
            min-height: 100px;
            resize: vertical;
        }

        .rating-group {
            display: flex;
            gap: 10px;
            align-items: center;
        }

        .rating-stars {
            display: flex;
            gap: 5px;
        }

        .star {
            font-size: 24px;
            color: #ddd;
            cursor: pointer;
            transition: color 0.2s ease;
        }

        .star.active {
            color: #ffd700;
        }

        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0,0,0,0.5);
            z-index: 1000;
        }

        .modal-content {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: white;
            padding: 30px;
            border-radius: 15px;
            max-width: 600px;
            width: 90%;
            max-height: 80vh;
            overflow-y: auto;
        }

        .close-modal {
            position: absolute;
            top: 15px;
            right: 20px;
            font-size: 24px;
            cursor: pointer;
            color: #6c757d;
        }

        .empty-state {
            text-align: center;
            padding: 50px;
            color: #6c757d;
        }

        .empty-state img {
            width: 150px;
            opacity: 0.5;
            margin-bottom: 20px;
        }

        @media (max-width: 768px) {
            .tabs {
                flex-direction: column;
            }
            
            .application-details {
                grid-template-columns: 1fr;
            }
            
            .action-buttons {
                flex-direction: column;
            }
            
            .stats-grid {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üéØ Mentorship Admin</h1>
            <p>Review and manage mentor applications efficiently</p>
        </div>

        <div class="tabs">
            <button class="tab active" onclick="showTab('dashboard')">üìä Dashboard</button>
            <button class="tab" onclick="showTab('pending')">‚è≥ Pending Applications</button>
            <button class="tab" onclick="showTab('approved')">‚úÖ Approved Mentors</button>
            <button class="tab" onclick="showTab('rejected')">‚ùå Rejected Applications</button>
        </div>

        <div class="content">
            <!-- Dashboard Tab -->
            <div id="dashboard" class="tab-content active">
                <h2>üìà Overview Dashboard</h2>
                <div class="stats-grid">
                    <div class="stat-card">
                        <div class="stat-number" id="totalApplications">12</div>
                        <div class="stat-label">Total Applications</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-number" id="pendingCount">5</div>
                        <div class="stat-label">Pending Review</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-number" id="approvedCount">6</div>
                        <div class="stat-label">Approved Mentors</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-number" id="rejectedCount">1</div>
                        <div class="stat-label">Rejected</div>
                    </div>
                </div>
            </div>

            <!-- Pending Applications Tab -->
            <div id="pending" class="tab-content">
                <h2>‚è≥ Pending Applications</h2>
                <input type="text" class="search-bar" placeholder="üîç Search applications..." onkeyup="searchApplications(this.value, 'pending')">
                <div id="pendingApplications">
                    <!-- Applications will be loaded here -->
                </div>
            </div>

            <!-- Approved Applications Tab -->
            <div id="approved" class="tab-content">
                <h2>‚úÖ Approved Mentors</h2>
                <input type="text" class="search-bar" placeholder="üîç Search mentors..." onkeyup="searchApplications(this.value, 'approved')">
                <div id="approvedApplications">
                    <!-- Applications will be loaded here -->
                </div>
            </div>

            <!-- Rejected Applications Tab -->
            <div id="rejected" class="tab-content">
                <h2>‚ùå Rejected Applications</h2>
                <input type="text" class="search-bar" placeholder="üîç Search applications..." onkeyup="searchApplications(this.value, 'rejected')">
                <div id="rejectedApplications">
                    <!-- Applications will be loaded here -->
                </div>
            </div>
        </div>
    </div>

    <!-- Review Modal -->
    <div id="reviewModal" class="modal">
        <div class="modal-content">
            <span class="close-modal" onclick="closeModal()">&times;</span>
            <h3>üìù Review Application</h3>
            <div id="modalContent">
                <!-- Modal content will be loaded here -->
            </div>
        </div>
    </div>

    <script>
        // Sample application data (in real app, this would come from a database)
        let applications = [
            {
                id: 1,
                name: "Sarah Johnson",
                email: "sarah.johnson@email.com",
                experience: "8 years",
                field: "Software Engineering",
                company: "Tech Corp",
                motivation: "I want to help junior developers grow their careers and avoid common pitfalls I experienced early in my journey.",
                availability: "10 hours/week",
                previousMentorship: "Yes - mentored 3 interns at previous company",
                status: "pending",
                appliedDate: "2024-05-20",
                skills: ["JavaScript", "React", "Node.js", "Leadership"],
                linkedin: "linkedin.com/in/sarahjohnson"
            },
            {
                id: 2,
                name: "Michael Chen",
                email: "m.chen@company.com",
                experience: "12 years",
                field: "Product Management",
                company: "Innovation Labs",
                motivation: "I've benefited greatly from mentors throughout my career and want to pay it forward.",
                availability: "8 hours/week",
                previousMentorship: "Yes - formal mentor at current company for 2 years",
                status: "approved",
                appliedDate: "2024-05-18",
                skills: ["Product Strategy", "Agile", "Team Leadership", "Analytics"],
                linkedin: "linkedin.com/in/michaelchen",
                approvedDate: "2024-05-22",
                notes: "Excellent experience and strong communication skills."
            },
            {
                id: 3,
                name: "Emily Rodriguez",
                email: "emily.r@startup.io",
                experience: "6 years",
                field: "UX Design",
                company: "Design Studio",
                motivation: "I'm passionate about helping new designers build confidence and develop their unique design voice.",
                availability: "12 hours/week",
                previousMentorship: "Some informal mentoring of junior designers",
                status: "pending",
                appliedDate: "2024-05-19",
                skills: ["UI/UX Design", "Figma", "User Research", "Prototyping"],
                linkedin: "linkedin.com/in/emilyrodriguez"
            },
            {
                id: 4,
                name: "David Kim",
                email: "david.kim@finance.com",
                experience: "15 years",
                field: "Financial Analysis",
                company: "Global Finance",
                motivation: "Want to share knowledge and help others navigate the complex world of finance.",
                availability: "6 hours/week",
                previousMentorship: "Led training programs for new hires",
                status: "approved",
                appliedDate: "2024-05-15",
                skills: ["Financial Modeling", "Risk Analysis", "Excel", "Leadership"],
                linkedin: "linkedin.com/in/davidkim",
                approvedDate: "2024-05-21",
                notes: "Strong background and excellent references."
            },
            {
                id: 5,
                name: "Lisa Thompson",
                email: "lisa.thompson@marketing.com",
                experience: "10 years",
                field: "Digital Marketing",
                company: "Marketing Agency",
                motivation: "I love seeing people discover their potential and achieve their career goals.",
                availability: "15 hours/week",
                previousMentorship: "Mentored 5+ junior marketers over past 3 years",
                status: "pending",
                appliedDate: "2024-05-21",
                skills: ["Digital Marketing", "SEO", "Content Strategy", "Analytics"],
                linkedin: "linkedin.com/in/lisathompson"
            },
            {
                id: 6,
                name: "Robert Martinez",
                email: "r.martinez@consulting.com",
                experience: "20 years",
                field: "Business Consulting",
                company: "Strategic Consulting",
                motivation: "Experienced professional looking to give back to the community.",
                availability: "5 hours/week",
                previousMentorship: "Executive coaching and mentoring",
                status: "approved",
                appliedDate: "2024-05-14",
                skills: ["Strategic Planning", "Business Development", "Leadership", "Consulting"],
                linkedin: "linkedin.com/in/robertmartinez",
                approvedDate: "2024-05-20",
                notes: "Highly experienced with excellent track record."
            },
            {
                id: 7,
                name: "Jennifer Walsh",
                email: "j.walsh@hr.com",
                experience: "7 years",
                field: "Human Resources",
                company: "People First HR",
                motivation: "I want to help people navigate their career development and workplace challenges.",
                availability: "8 hours/week",
                previousMentorship: "Career coaching within current organization",
                status: "rejected",
                appliedDate: "2024-05-16",
                skills: ["HR Management", "Recruitment", "Employee Development", "Conflict Resolution"],
                linkedin: "linkedin.com/in/jenniferwalsh",
                rejectedDate: "2024-05-23",
                rejectionReason: "Limited availability conflicts with program requirements."
            },
            {
                id: 8,
                name: "Alex Turner",
                email: "alex.turner@data.com",
                experience: "9 years",
                field: "Data Science",
                company: "Analytics Pro",
                motivation: "Data science is rapidly evolving, and I want to help others stay current and build strong foundations.",
                availability: "10 hours/week",
                previousMentorship: "Teaching assistant in university courses",
                status: "pending",
                appliedDate: "2024-05-22",
                skills: ["Python", "Machine Learning", "SQL", "Statistics"],
                linkedin: "linkedin.com/in/alexturner"
            },
            {
                id: 9,
                name: "Maria Santos",
                email: "maria.santos@operations.com",
                experience: "11 years",
                field: "Operations Management",
                company: "Logistics Leader",
                motivation: "I believe in empowering others through knowledge sharing and practical guidance.",
                availability: "12 hours/week",
                previousMentorship: "Supervised and developed team members for 5+ years",
                status: "approved",
                appliedDate: "2024-05-17",
                skills: ["Operations", "Process Improvement", "Team Management", "Supply Chain"],
                linkedin: "linkedin.com/in/mariasantos",
                approvedDate: "2024-05-24",
                notes: "Strong operational background with proven mentoring experience."
            },
            {
                id: 10,
                name: "James Wilson",
                email: "james.wilson@sales.com",
                experience: "13 years",
                field: "Sales Management",
                company: "Sales Excellence",
                motivation: "I want to help sales professionals develop both their technical skills and emotional intelligence.",
                availability: "9 hours/week",
                previousMentorship: "Sales training and team development",
                status: "pending",
                appliedDate: "2024-05-23",
                skills: ["Sales Strategy", "CRM", "Negotiation", "Team Leadership"],
                linkedin: "linkedin.com/in/jameswilson"
            },
            {
                id: 11,
                name: "Rachel Green",
                email: "rachel.green@creative.com",
                experience: "8 years",
                field: "Creative Direction",
                company: "Creative Studio",
                motivation: "I'm passionate about nurturing creative talent and helping artists find their unique voice.",
                availability: "14 hours/week",
                previousMentorship: "Art workshops and portfolio reviews",
                status: "approved",
                appliedDate: "2024-05-19",
                skills: ["Creative Direction", "Brand Design", "Adobe Creative Suite", "Team Leadership"],
                linkedin: "linkedin.com/in/rachelgreen",
                approvedDate: "2024-05-25",
                notes: "Creative expertise with strong portfolio and teaching background."
            },
            {
                id: 12,
                name: "Tom Anderson",
                email: "tom.anderson@cyber.com",
                experience: "14 years",
                field: "Cybersecurity",
                company: "SecureNet",
                motivation: "Cybersecurity is critical for all organizations, and I want to help build the next generation of security professionals.",
                availability: "7 hours/week",
                previousMentorship: "Security training and certification guidance",
                status: "approved",
                appliedDate: "2024-05-20",
                skills: ["Network Security", "Penetration Testing", "Risk Assessment", "Compliance"],
                linkedin: "linkedin.com/in/tomanderson",
                approvedDate: "2024-05-26",
                notes: "Critical security expertise with strong mentoring background."
            }
        ];

        // Initialize the application
        function init() {
            loadApplications();
            updateStats();
        }

        // Show specific tab
        function showTab(tabName) {
            const tabs = document.querySelectorAll('.tab');
            const contents = document.querySelectorAll('.tab-content');
            
            tabs.forEach(tab => tab.classList.remove('active'));
            contents.forEach(content => content.classList.remove('active'));
            
            event.target.classList.add('active');
            document.getElementById(tabName).classList.add('active');
            
            loadApplications();
        }

        // Load applications for current tab
        function loadApplications() {
            const pendingContainer = document.getElementById('pendingApplications');
            const approvedContainer = document.getElementById('approvedApplications');
            const rejectedContainer = document.getElementById('rejectedApplications');
            
            if (pendingContainer) {
                pendingContainer.innerHTML = '';
                const pendingApps = applications.filter(app => app.status === 'pending');
                pendingApps.forEach(app => {
                    pendingContainer.appendChild(createApplicationCard(app));
                });
                
                if (pendingApps.length === 0) {
                    pendingContainer.innerHTML = '<div class="empty-state"><h3>No pending applications</h3><p>All applications have been reviewed.</p></div>';
                }
            }
            
            if (approvedContainer) {
                approvedContainer.innerHTML = '';
                const approvedApps = applications.filter(app => app.status === 'approved');
                approvedApps.forEach(app => {
                    approvedContainer.appendChild(createApplicationCard(app));
                });
                
                if (approvedApps.length === 0) {
                    approvedContainer.innerHTML = '<div class="empty-state"><h3>No approved mentors</h3><p>No mentors have been approved yet.</p></div>';
                }
            }
            
            if (rejectedContainer) {
                rejectedContainer.innerHTML = '';
                const rejectedApps = applications.filter(app => app.status === 'rejected');
                rejectedApps.forEach(app => {
                    rejectedContainer.appendChild(createApplicationCard(app));
                });
                
                if (rejectedApps.length === 0) {
                    rejectedContainer.innerHTML = '<div class="empty-state"><h3>No rejected applications</h3><p>No applications have been rejected.</p></div>';
                }
            }
        }

        // Create application card HTML
        function createApplicationCard(app) {
            const card = document.createElement('div');
            card.className = 'application-card';
            
            const statusClass = `status-${app.status}`;
            const statusText = app.status.charAt(0).toUpperCase() + app.status.slice(1);
            
            card.innerHTML = `
                <div class="card-header">
                    <div class="applicant-name">${app.name}</div>
                    <div class="status-badge ${statusClass}">${statusText}</div>
                </div>
                
                <div class="application-details">
                    <div class="detail-group">
                        <div class="detail-label">üìß Contact</div>
                        <div class="detail-value">${app.email}</div>
                    </div>
                    <div class="detail-group">
                        <div class="detail-label">üè¢ Company</div>
                        <div class="detail-value">${app.company}</div>
                    </div>
                    <div class="detail-group">
                        <div class="detail-label">üíº Field</div>
                        <div class="detail-value">${app.field}</div>
                    </div>
                    <div class="detail-group">
                        <div class="detail-label">‚è±Ô∏è Experience</div>
                        <div class="detail-value">${app.experience}</div>
                    </div>
                    <div class="detail-group">
                        <div class="detail-label">üìÖ Applied Date</div>
                        <div class="detail-value">${formatDate(app.appliedDate)}</div>
                    </div>
                    <div class="detail-group">
                        <div class="detail-label">‚åö Availability</div>
                        <div class="detail-value">${app.availability}</div>
                    </div>
                </div>
                
                <div class="detail-group">
                    <div class="detail-label">üí° Motivation</div>
                    <div class="detail-value">${app.motivation}</div>
                </div>
                
                <div class="detail-group">
                    <div class="detail-label">üéØ Skills</div>
                    <div class="detail-value">${app.skills.join(', ')}</div>
                </div>
                
                ${app.status === 'approved' ? `
                    <div class="detail-group">
                        <div class="detail-label">‚úÖ Approved Date</div>
                        <div class="detail-value">${formatDate(app.approvedDate)}</div>
                    </div>
                    ${app.notes ? `
                        <div class="detail-group">
                            <div class="detail-label">üìù Notes</div>
                            <div class="detail-value">${app.notes}</div>
                        </div>
                    ` : ''}
                ` : ''}
                
                ${app.status === 'rejected' ? `
                    <div class="detail-group">
                        <div class="detail-label">‚ùå Rejected Date</div>
                        <div class="detail-value">${formatDate(app.rejectedDate)}</div>
                    </div>
                    <div class="detail-group">
                        <div class="detail-label">üìÑ Reason</div>
                        <div class="detail-value">${app.rejectionReason}</div>
                    </div>
                ` : ''}
                
                <div class="action-buttons">
                    <button class="btn btn-primary" onclick="viewApplication(${app.id})">üëÅÔ∏è View Details</button>
                    ${app.status === 'pending' ? `
                        <button class="btn btn-success" onclick="approveApplication(${app.id})">‚úÖ Approve</button>
                        <button class="btn btn-danger" onclick="rejectApplication(${app.id})">‚ùå Reject</button>
                    ` : ''}
                    ${app.status === 'approved' ? `
                        <button class="btn btn-secondary" onclick="sendWelcomeEmail(${app.id})">üìß Send Welcome</button>
                    ` : ''}
                </div>
            `;
            
            return card;
        }

        // Format date for display
        function formatDate(dateString) {
            const date = new Date(dateString);
            return date.toLocaleDateString('en-US', { 
                year: 'numeric', 
                month: 'long', 
                day: 'numeric' 
            });
        }

        // Update dashboard statistics
        function updateStats() {
            const total = applications.length;
            const pending = applications.filter(app => app.status === 'pending').length;
            const approved = applications.filter(app => app.status === 'approved').length;
            const rejected = applications.filter(app => app.status === 'rejected').length;
            
            document.getElementById('totalApplications').textContent = total;
            document.getElementById('pendingCount').textContent = pending;
            document.getElementById('approvedCount').textContent = approved;
            document.getElementById('rejectedCount').textContent = rejected;
        }

        // Search applications
        function searchApplications(query, status) {
            const container = document.getElementById(`${status}Applications`);
            const filteredApps = applications.filter(app => {
                return app.status === status && 
                       (app.name.toLowerCase().includes(query.toLowerCase()) ||
                        app.field.toLowerCase().includes(query.toLowerCase()) ||
                        app.company.toLowerCase().includes(query.toLowerCase()));
            });
            
            container.innerHTML = '';
            filteredApps.forEach(app => {
                container.appendChild(createApplicationCard(app));
            });
            
            if (filteredApps.length === 0 && query) {
                container.innerHTML = '<div class="empty-state"><h3>No results found</h3><p>Try adjusting your search terms.</p></div>';
            }
        }

        // View application details
        function viewApplication(id) {
            const app = applications.find(a => a.id === id);
            if (!app) return;
            
            const modalContent = document.getElementById('modalContent');
            modalContent.innerHTML = `
                <h4>üë§ ${app.name}</h4>
                <div style="margin: 20px 0;">
                    <strong>üìß Email:</strong> ${app.email}<br>
                    <strong>üè¢ Company:</strong> ${app.company}<br>
                    <strong>üíº Field:</strong> ${app.field}<br>
                    <strong>‚è±Ô∏è Experience:</strong> ${app.experience}<br>
                    <strong>‚åö Availability:</strong> ${app.availability}<br>
                    <strong>üîó LinkedIn:</strong> <a href="https://${app.linkedin}" target="_blank">${app.linkedin}</a><br>
                </div>
                
                <div style="margin: 20px 0;">
                    <strong>üí° Motivation:</strong><br>
                    <p style="background: #fff8f3; padding: 15px; border-radius: 8px; margin-top: 10px;">${app.motivation}</p>
                </div>
                
                <div style="margin: 20px 0;">
                    <strong>üéì Previous Mentorship Experience:</strong><br>
                    <p style="background: #fff8f3; padding: 15px; border-radius: 8px; margin-top: 10px;">${app.previousMentorship}</p>
                </div>
                
                <div style="margin: 20px 0;">
                    <strong>üéØ Skills:</strong><br>
                    <div style="margin-top: 10px;">
                        ${app.skills.map(skill => `<span style="background: #ff6b35; color: white; padding: 5px 10px; border-radius: 15px; margin: 2px; display: inline-block;">${skill}</span>`).join('')}
                    </div>
                </div>
                
                ${app.status === 'pending' ? `
                    <div class="review-form">
                        <h5>üìù Review & Decision</h5>
                        <div class="form-group">
                            <label class="form-label">Overall Rating</label>
                            <div class="rating-group">
                                <div class="rating-stars" id="rating-${id}">
                                    <span class="star" onclick="setRating(${id}, 1)">‚≠ê</span>
                                    <span class="star" onclick="setRating(${id}, 2)">‚≠ê</span>
                                    <span class="star" onclick="setRating(${id}, 3)">‚≠ê</span>
                                    <span class="star" onclick="setRating(${id}, 4)">‚≠ê</span>
                                    <span class="star" onclick="setRating(${id}, 5)">‚≠ê</span>
                                </div>
                                <span id="rating-text-${id}">No rating</span>
                            </div>
                        </div>
                        
                        <div class="form-group">
                            <label class="form-label">Review Notes</label>
                            <textarea class="form-control" id="notes-${id}" placeholder="Add your review notes here..."></textarea>
                        </div>
                        
                        <div class="action-buttons">
                            <button class="btn btn-success" onclick="approveApplicationWithReview(${id})">‚úÖ Approve Mentor</button>
                            <button class="btn btn-danger" onclick="rejectApplicationWithReview(${id})">‚ùå Reject Application</button>
                        </div>
                    </div>
                ` : ''}
                
                ${app.status === 'approved' ? `
                    <div style="background: #d4edda; padding: 15px; border-radius: 8px; margin-top: 20px;">
                        <strong>‚úÖ Approved on ${formatDate(app.approvedDate)}</strong>
                        ${app.notes ? `<br><br><strong>Notes:</strong> ${app.notes}` : ''}
                    </div>
                ` : ''}
                
                ${app.status === 'rejected' ? `
                    <div style="background: #f8d7da; padding: 15px; border-radius: 8px; margin-top: 20px;">
                        <strong>‚ùå Rejected on ${formatDate(app.rejectedDate)}</strong>
                        <br><br><strong>Reason:</strong> ${app.rejectionReason}
                    </div>
                ` : ''}
            `;
            
            document.getElementById('reviewModal').style.display = 'block';
        }

        // Set rating stars
        function setRating(id, rating) {
            const stars = document.querySelectorAll(`#rating-${id} .star`);
            const ratingText = document.getElementById(`rating-text-${id}`);
            
            stars.forEach((star, index) => {
                if (index < rating) {
                    star.classList.add('active');
                } else {
                    star.classList.remove('active');
                }
            });
            
            const ratingLabels = ['Poor', 'Fair', 'Good', 'Very Good', 'Excellent'];
            ratingText.textContent = ratingLabels[rating - 1];
        }

        // Approve application
        function approveApplication(id) {
            if (confirm('Are you sure you want to approve this mentor application?')) {
                const app = applications.find(a => a.id === id);
                if (app) {
                    app.status = 'approved';
                    app.approvedDate = new Date().toISOString().split('T')[0];
                    app.notes = 'Application approved by admin.';
                    
                    loadApplications();
                    updateStats();
                    
                    alert(`‚úÖ ${app.name} has been approved as a mentor!`);
                }
            }
        }

        // Reject application
        function rejectApplication(id) {
            const reason = prompt('Please provide a reason for rejection:');
            if (reason && reason.trim()) {
                const app = applications.find(a => a.id === id);
                if (app) {
                    app.status = 'rejected';
                    app.rejectedDate = new Date().toISOString().split('T')[0];
                    app.rejectionReason = reason.trim();
                    
                    loadApplications();
                    updateStats();
                    
                    alert(`‚ùå ${app.name}'s application has been rejected.`);
                }
            }
        }

        // Approve application with detailed review
        function approveApplicationWithReview(id) {
            const notes = document.getElementById(`notes-${id}`).value;
            const ratingStars = document.querySelectorAll(`#rating-${id} .star.active`);
            
            if (confirm('Are you sure you want to approve this mentor application?')) {
                const app = applications.find(a => a.id === id);
                if (app) {
                    app.status = 'approved';
                    app.approvedDate = new Date().toISOString().split('T')[0];
                    app.notes = notes || 'Application approved by admin.';
                    app.rating = ratingStars.length;
                    
                    closeModal();
                    loadApplications();
                    updateStats();
                    
                    alert(`‚úÖ ${app.name} has been approved as a mentor!`);
                }
            }
        }

        // Reject application with detailed review
        function rejectApplicationWithReview(id) {
            const notes = document.getElementById(`notes-${id}`).value;
            
            if (!notes.trim()) {
                alert('Please provide review notes for the rejection.');
                return;
            }
            
            if (confirm('Are you sure you want to reject this application?')) {
                const app = applications.find(a => a.id === id);
                if (app) {
                    app.status = 'rejected';
                    app.rejectedDate = new Date().toISOString().split('T')[0];
                    app.rejectionReason = notes.trim();
                    
                    closeModal();
                    loadApplications();
                    updateStats();
                    
                    alert(`‚ùå ${app.name}'s application has been rejected.`);
                }
            }
        }

        // Send welcome email (simulation)
        function sendWelcomeEmail(id) {
            const app = applications.find(a => a.id === id);
            if (app) {
                alert(`üìß Welcome email sent to ${app.name} at ${app.email}!`);
            }
        }

        // Close modal
        function closeModal() {
            document.getElementById('reviewModal').style.display = 'none';
        }

        // Close modal when clicking outside
        window.onclick = function(event) {
            const modal = document.getElementById('reviewModal');
            if (event.target === modal) {
                closeModal();
            }
        }

        // Initialize the application when page loads
        document.addEventListener('DOMContentLoaded', init);
    </script>
</body>
</html>






Mentorship.HTML 

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Ubuntu Plug - Mentorship</title>
    <style>
        :root {
            --primary-color: #FF6600;
            --secondary-color: #2ecc71;
            --dark-color: #2c3e50;
            --light-color: #ecf0f1;
            --shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        body {
            background-color: #f5f7fa;
            color: #333;
        }

        /* Header Styles */
        header {
            background: linear-gradient(135deg, #FF6600, #FF8533);
            color: white;
            padding: 1rem 0;
            box-shadow: var(--shadow);
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 20px;
        }

        .header-content {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .logo {
            font-size: 1.8rem;
            font-weight: bold;
        }

        .logo span {
            color: #FFD700;
        }

        .nav-links {
            display: flex;
            list-style: none;
            gap: 2rem;
        }

        .nav-links a {
            color: white;
            text-decoration: none;
            transition: color 0.3s;
        }

        .nav-links a:hover {
            color: #FFD700;
        }

        .menu-toggle {
            display: none;
            background: none;
            border: none;
            color: white;
            font-size: 1.5rem;
            cursor: pointer;
        }

        /* Main Content */
        .main-content {
            padding: 2rem 0;
        }

        .page-title {
            text-align: center;
            margin-bottom: 3rem;
        }

        .page-title h1 {
            color: var(--dark-color);
            font-size: 2.5rem;
            margin-bottom: 1rem;
        }

        .page-title p {
            color: #666;
            font-size: 1.1rem;
        }

        .dashboard-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
        }

        .btn {
            padding: 0.8rem 1.5rem;
            background: linear-gradient(135deg, var(--primary-color), #FF8533);
            color: white;
            border: none;
            border-radius: 25px;
            cursor: pointer;
            transition: all 0.3s ease;
            font-weight: 600;
            text-decoration: none;
            display: inline-block;
        }

        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(255, 102, 0, 0.3);
        }

        .mentors-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
            gap: 2rem;
            margin-top: 2rem;
        }

        /* Mentor Card Colors */
        .mentor-card {
            border-radius: 15px;
            overflow: hidden;
            box-shadow: var(--shadow);
            transition: transform 0.3s ease;
            background: white;
        }

        .mentor-card:hover {
            transform: translateY(-5px);
        }

        .mentor-card.color-1 { border-left: 5px solid #3498db; }
        .mentor-card.color-2 { border-left: 5px solid #2ecc71; }
        .mentor-card.color-3 { border-left: 5px solid #9b59b6; }
        .mentor-card.color-4 { border-left: 5px solid #f39c12; }
        .mentor-card.color-5 { border-left: 5px solid #e74c3c; }
        .mentor-card.color-6 { border-left: 5px solid #1abc9c; }
        .mentor-card.color-7 { border-left: 5px solid #e67e22; }
        .mentor-card.color-8 { border-left: 5px solid #34495e; }

        .mentor-header {
            padding: 1.5rem;
            background: linear-gradient(135deg, #f8f9fa, #e9ecef);
        }

        .mentor-name {
            font-size: 1.3rem;
            font-weight: bold;
            color: var(--dark-color);
            margin-bottom: 0.5rem;
        }

        .mentor-field {
            background: var(--primary-color);
            color: white;
            padding: 0.3rem 0.8rem;
            border-radius: 15px;
            font-size: 0.9rem;
            display: inline-block;
        }

        .mentor-body {
            padding: 1.5rem;
        }

        .mentor-info {
            margin-bottom: 1rem;
        }

        .info-item {
            display: flex;
            align-items: flex-start;
            margin-bottom: 0.8rem;
            font-size: 0.95rem;
        }

        .info-icon {
            margin-right: 0.5rem;
            font-size: 1.1rem;
        }

        .availability-slots {
            display: flex;
            flex-wrap: wrap;
            gap: 0.5rem;
            margin-top: 1rem;
        }

        .time-slot {
            background: #e8f4f8;
            color: #2c3e50;
            padding: 0.3rem 0.6rem;
            border-radius: 12px;
            font-size: 0.85rem;
            border: 1px solid #b8daff;
        }

        .mentor-actions {
            padding: 1rem 1.5rem;
            border-top: 1px solid #eee;
        }

        /* Modal Styles */
        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            overflow-y: auto;
        }

        .modal-content {
            background-color: white;
            margin: 2% auto;
            padding: 2rem;
            width: 90%;
            max-width: 700px;
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
            max-height: 95vh;
            overflow-y: auto;
        }

        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
        }

        .close {
            color: #aaa;
            font-size: 28px;
            font-weight: bold;
            cursor: pointer;
            background: none;
            border: none;
        }

        .close:hover {
            color: #333;
        }

        .form-row {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 1rem;
            margin-bottom: 1.5rem;
        }

        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-group label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 600;
            color: var(--dark-color);
        }

        .form-control {
            width: 100%;
            padding: 0.8rem;
            border: 2px solid #e1e5e9;
            border-radius: 8px;
            font-size: 1rem;
            transition: border-color 0.3s;
        }

        .form-control:focus {
            outline: none;
            border-color: var(--primary-color);
        }

        .time-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
            gap: 0.5rem;
            margin-top: 0.5rem;
        }

        .time-option {
            display: flex;
            align-items: center;
            padding: 0.5rem;
            background: #f8f9fa;
            border-radius: 8px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        .time-option:hover {
            background: #e9ecef;
        }

        .time-option input {
            margin-right: 0.5rem;
        }

        .sa-locations {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 0.5rem;
            margin-top: 0.5rem;
        }

        .location-option {
            display: flex;
            align-items: center;
            padding: 0.5rem;
            background: #f8f9fa;
            border-radius: 8px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        .location-option:hover {
            background: #e9ecef;
        }

        .location-option input {
            margin-right: 0.5rem;
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .nav-links {
                display: none;
            }

            .menu-toggle {
                display: block;
            }

            .form-row {
                grid-template-columns: 1fr;
            }

            .mentors-grid {
                grid-template-columns: 1fr;
            }

            .modal-content {
                width: 95%;
                margin: 5% auto;
                padding: 1rem;
            }
        }

        .empty-state {
            text-align: center;
            padding: 3rem;
            color: #666;
        }

        .empty-state h3 {
            margin-bottom: 1rem;
        }
    </style>
</head>
<body>
    <!-- Header Section -->
    <header>
        <div class="container header-content">
            <div class="logo">
                Ubuntu<span>Plug</span>
            </div>
            <button class="menu-toggle" id="menuToggle">‚ò∞</button>
            <ul class="nav-links" id="navLinks">
                <li><a href="/dev1.html">Home</a></li>
                <li><a href="/opportunity.html">Opportunities</a></li>
                <li><a href="/skillup.html">Skill Up</a></li>
                <li><a href="/dev4.html">Mentorship</a></li>
                <li><a href="/dev5.html">Community Forum</a></li>
            </ul>
        </div>
    </header>

    <!-- Main Content -->
    <div class="container main-content">
        <div class="page-title">
            <h1>Mentorship Hub</h1>
            <p>Connect with experienced mentors across South Africa and grow your skills</p>
        </div>

        <div class="dashboard-header">
            <h2>Available Mentors</h2>
            <button id="addMentorBtn" class="btn">Become a Mentor</button>
        </div>

        <div class="mentors-grid" id="mentorsGrid">
            <!-- Mentors will be dynamically added here -->
        </div>
    </div>

    <!-- Modal for adding a new mentor -->
    <div id="mentorModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h2>Register as a Mentor</h2>
                <button class="close" id="closeModal">&times;</button>
            </div>
            <form id="mentorForm">
                <div class="form-row">
                    <div class="form-group">
                        <label for="firstName">First Name *</label>
                        <input type="text" id="firstName" class="form-control" required>
                    </div>
                    <div class="form-group">
                        <label for="lastName">Last Name *</label>
                        <input type="text" id="lastName" class="form-control" required>
                    </div>
                </div>

                <div class="form-group">
                    <label for="field">Field of Mentorship *</label>
                    <select id="field" class="form-control" required>
                        <option value="">Select your field</option>
                        <option value="Software Development">Software Development</option>
                        <option value="Data Science">Data Science</option>
                        <option value="Mobile Development">Mobile Development</option>
                        <option value="UI/UX Design">UI/UX Design</option>
                        <option value="DevOps">DevOps</option>
                        <option value="Business Development">Business Development</option>
                        <option value="Digital Marketing">Digital Marketing</option>
                        <option value="Project Management">Project Management</option>
                        <option value="Cybersecurity">Cybersecurity</option>
                        <option value="Other">Other</option>
                    </select>
                </div>

                <div class="form-group">
                    <label for="activities">Specific Activities You Will Mentor *</label>
                    <textarea id="activities" class="form-control" rows="4" required 
                              placeholder="Describe specific mentorship activities you offer (e.g., code reviews, portfolio building, interview preparation, career guidance)"></textarea>
                </div>

                <div class="form-row">
                    <div class="form-group">
                        <label for="email">Email Address *</label>
                        <input type="email" id="email" class="form-control" required>
                    </div>
                    <div class="form-group">
                        <label for="phone">Phone Number *</label>
                        <input type="tel" id="phone" class="form-control" required 
                               placeholder="e.g., +27 82 123 4567">
                    </div>
                </div>

                <div class="form-group">
                    <label>Location in South Africa *</label>
                    <div class="sa-locations">
                        <label class="location-option">
                            <input type="radio" name="location" value="Cape Town" required> Cape Town
                        </label>
                        <label class="location-option">
                            <input type="radio" name="location" value="Johannesburg" required> Johannesburg
                        </label>
                        <label class="location-option">
                            <input type="radio" name="location" value="Durban" required> Durban
                        </label>
                        <label class="location-option">
                            <input type="radio" name="location" value="Pretoria" required> Pretoria
                        </label>
                        <label class="location-option">
                            <input type="radio" name="location" value="Port Elizabeth" required> Port Elizabeth
                        </label>
                        <label class="location-option">
                            <input type="radio" name="location" value="Bloemfontein" required> Bloemfontein
                        </label>
                        <label class="location-option">
                            <input type="radio" name="location" value="East London" required> East London
                        </label>
                        <label class="location-option">
                            <input type="radio" name="location" value="Remote/Online" required> Remote/Online
                        </label>
                    </div>
                </div>

                <div class="form-group">
                    <label>Available Time Slots (SAST - South African Standard Time)</label>
                    <div class="time-grid">
                        <label class="time-option">
                            <input type="checkbox" name="timeSlot" value="Monday 08:00-11:00"> Mon 08:00-11:00
                        </label>
                        <label class="time-option">
                            <input type="checkbox" name="timeSlot" value="Monday 12:00-15:00"> Mon 12:00-15:00
                        </label>
                        <label class="time-option">
                            <input type="checkbox" name="timeSlot" value="Monday 16:00-19:00"> Mon 16:00-19:00
                        </label>
                        <label class="time-option">
                            <input type="checkbox" name="timeSlot" value="Tuesday 08:00-11:00"> Tue 08:00-11:00
                        </label>
                        <label class="time-option">
                            <input type="checkbox" name="timeSlot" value="Tuesday 12:00-15:00"> Tue 12:00-15:00
                        </label>
                        <label class="time-option">
                            <input type="checkbox" name="timeSlot" value="Tuesday 16:00-19:00"> Tue 16:00-19:00
                        </label>
                        <label class="time-option">
                            <input type="checkbox" name="timeSlot" value="Wednesday 08:00-11:00"> Wed 08:00-11:00
                        </label>
                        <label class="time-option">
                            <input type="checkbox" name="timeSlot" value="Wednesday 12:00-15:00"> Wed 12:00-15:00
                        </label>
                        <label class="time-option">
                            <input type="checkbox" name="timeSlot" value="Wednesday 16:00-19:00"> Wed 16:00-19:00
                        </label>
                        <label class="time-option">
                            <input type="checkbox" name="timeSlot" value="Thursday 08:00-11:00"> Thu 08:00-11:00
                        </label>
                        <label class="time-option">
                            <input type="checkbox" name="timeSlot" value="Thursday 12:00-15:00"> Thu 12:00-15:00
                        </label>
                        <label class="time-option">
                            <input type="checkbox" name="timeSlot" value="Thursday 16:00-19:00"> Thu 16:00-19:00
                        </label>
                        <label class="time-option">
                            <input type="checkbox" name="timeSlot" value="Friday 08:00-11:00"> Fri 08:00-11:00
                        </label>
                        <label class="time-option">
                            <input type="checkbox" name="timeSlot" value="Friday 12:00-15:00"> Fri 12:00-15:00
                        </label>
                        <label class="time-option">
                            <input type="checkbox" name="timeSlot" value="Friday 16:00-19:00"> Fri 16:00-19:00
                        </label>
                        <label class="time-option">
                            <input type="checkbox" name="timeSlot" value="Saturday 09:00-12:00"> Sat 09:00-12:00
                        </label>
                        <label class="time-option">
                            <input type="checkbox" name="timeSlot" value="Saturday 13:00-16:00"> Sat 13:00-16:00
                        </label>
                        <label class="time-option">
                            <input type="checkbox" name="timeSlot" value="Sunday 09:00-12:00"> Sun 09:00-12:00
                        </label>
                    </div>
                </div>

                <div style="text-align: center; margin-top: 2rem;">
                    <button type="submit" class="btn">Register as Mentor</button>
                </div>
            </form>
        </div>
    </div>

    <script>
        // Mentor data storage
        let mentors = [
            {
                id: 1,
                firstName: "Thabo",
                lastName: "Mthembu",
                field: "Software Development",
                activities: "Full-stack web development mentoring, code reviews, portfolio building, and interview preparation. I specialize in React, Node.js, and helping junior developers transition into tech careers.",
                email: "thabo.mthembu@email.com",
                phone: "+27 82 123 4567",
                location: "Johannesburg",
                timeSlots: ["Monday 16:00-19:00", "Wednesday 16:00-19:00", "Saturday 09:00-12:00"],
                colorClass: "color-1"
            },
            {
                id: 2,
                firstName: "Sarah",
                lastName: "van der Merwe",
                field: "UI/UX Design",
                activities: "Design portfolio reviews, user research guidance, Figma training, and design system creation. I help aspiring designers build strong portfolios and land their first design roles.",
                email: "sarah.vdm@email.com",
                phone: "+27 83 234 5678",
                location: "Cape Town",
                timeSlots: ["Tuesday 12:00-15:00", "Thursday 16:00-19:00", "Sunday 09:00-12:00"],
                colorClass: "color-2"
            },
            {
                id: 3,
                firstName: "Nomsa",
                lastName: "Dlamini",
                field: "Data Science",
                activities: "Python programming, machine learning projects, data analysis techniques, and career guidance for data science roles. Specializing in helping newcomers understand complex ML concepts.",
                email: "nomsa.dlamini@email.com",
                phone: "+27 84 345 6789",
                location: "Durban",
                timeSlots: ["Monday 12:00-15:00", "Wednesday 12:00-15:00", "Friday 16:00-19:00"],
                colorClass: "color-3"
            }
        ];

        // DOM elements
        const mentorsGrid = document.getElementById('mentorsGrid');
        const addMentorBtn = document.getElementById('addMentorBtn');
        const mentorModal = document.getElementById('mentorModal');
        const closeModal = document.getElementById('closeModal');
        const mentorForm = document.getElementById('mentorForm');

        // Color classes for mentor cards
        const colorClasses = ['color-1', 'color-2', 'color-3', 'color-4', 'color-5', 'color-6', 'color-7', 'color-8'];

        // Display mentors
        function displayMentors() {
            if (mentors.length === 0) {
                mentorsGrid.innerHTML = `
                    <div class="empty-state">
                        <h3>No mentors available yet</h3>
                        <p>Be the first to register as a mentor and help others grow!</p>
                    </div>
                `;
                return;
            }

            mentorsGrid.innerHTML = mentors.map(mentor => `
                <div class="mentor-card ${mentor.colorClass}">
                    <div class="mentor-header">
                        <div class="mentor-name">${mentor.firstName} ${mentor.lastName}</div>
                        <div class="mentor-field">${mentor.field}</div>
                    </div>
                    <div class="mentor-body">
                        <div class="mentor-info">
                            <div class="info-item">
                                <span class="info-icon">üìß</span>
                                <span>${mentor.email}</span>
                            </div>
                            <div class="info-item">
                                <span class="info-icon">üì±</span>
                                <span>${mentor.phone}</span>
                            </div>
                            <div class="info-item">
                                <span class="info-icon">üìç</span>
                                <span>${mentor.location}</span>
                            </div>
                            <div class="info-item">
                                <span class="info-icon">üí°</span>
                                <span>${mentor.activities}</span>
                            </div>
                        </div>
                        
                        ${mentor.timeSlots.length > 0 ? `
                            <h4 style="margin-bottom: 0.5rem; color: var(--dark-color);">Available Times (SAST):</h4>
                            <div class="availability-slots">
                                ${mentor.timeSlots.map(slot => `<span class="time-slot">${slot}</span>`).join('')}
                            </div>
                        ` : ''}
                    </div>
                    <div class="mentor-actions">
                        <button class="btn contact-btn" onclick="contactMentor('${mentor.email}', '${mentor.firstName} ${mentor.lastName}')">
                            Contact Mentor
                        </button>
                    </div>
                </div>
            `).join('');
        }

        // Contact mentor function
        function contactMentor(email, name) {
            const subject = encodeURIComponent(`Mentorship Request - Ubuntu Plug`);
            const body = encodeURIComponent(`Hi ${name},\n\nI found your profile on Ubuntu Plug and I'm interested in your mentorship services.\n\nCould we schedule a time to discuss?\n\nThank you!`);
            window.open(`mailto:${email}?subject=${subject}&body=${body}`);
        }

        // Add mentor form submission
        mentorForm.addEventListener('submit', function(e) {
            e.preventDefault();
            
            const formData = new FormData(mentorForm);
            const timeSlots = Array.from(document.querySelectorAll('input[name="timeSlot"]:checked'))
                .map(checkbox => checkbox.value);
            
            const location = document.querySelector('input[name="location"]:checked')?.value;
            
            if (!location) {
                alert('Please select your location.');
                return;
            }

            const newMentor = {
                id: Date.now(),
                firstName: formData.get('firstName'),
                lastName: formData.get('lastName'),
                field: formData.get('field'),
                activities: formData.get('activities'),
                email: formData.get('email'),
                phone: formData.get('phone'),
                location: location,
                timeSlots: timeSlots,
                colorClass: colorClasses[mentors.length % colorClasses.length]
            };

            mentors.push(newMentor);
            displayMentors();
            mentorForm.reset();
            mentorModal.style.display = 'none';
            
            alert('Thank you! Your mentorship profile has been registered successfully.');
        });

        // Modal controls
        addMentorBtn.addEventListener('click', () => {
            mentorModal.style.display = 'block';
        });

        closeModal.addEventListener('click', () => {
            mentorModal.style.display = 'none';
        });

        window.addEventListener('click', (e) => {
            if (e.target === mentorModal) {
                mentorModal.style.display = 'none';
            }
        });

        // Initialize
        displayMentors();
    </script>
</body>
</html>